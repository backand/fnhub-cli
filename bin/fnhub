#!/usr/bin/env node
process.bin = process.title = 'fnhub';


console.log('\n' +    
'                              _                          ___                                      \n' +    
'     λλ                      | |                        / _ \\                                    \n' +    
'       λ                    _| |_   _  __ _ __   _   _ | |_) )                                    \n' +    
'        λ                  /     \\ | |/ /| \'_ \\ | | | ||  _ <                                  \n' +    
'      λ  λ                ( (| |) )| / / | | | || |_| || |_) )                                    \n' +    
'     λ    λ                \\_   _/ |__/  |_| | | \\___/ |  __/                                   \n' +    
'    λ      λ                 | |             | |       | |                                        \n' +    
'   λ        λ                | |             | |       | |                                        \n' +  
'                             |_|             |_|       |_|                                        \n' +
'fnhub version: ' + require('../package.json').version + '\n');


"use strict";
var backand     =     require('@backand/nodejs-sdk');
var colors      =     require('colors');
var options     =     require('minimist')(process.argv.slice(2));
var commands    =     require('../lib/commands');
var router      =     require('../plugins/router');
var fnhub       =     require('../lib/fnhub');

var command     = process.argv[2];
var subCommand  = (options._.length > 1) ? options._[1] : null;

fnhub.logger.debug.log(command, options);

if(!command) {
  command = "help";
}

// init backand for credencials
backand.init(fnhub.config.backand);

// track here
var func = commands.getCommand(command, subCommand);
if (func){
    func(options, fnhub);
} else {
  if (process.argv.length >= 4) { // possibly a plugin
    var moduleName = process.argv[2];
    var commandName = process.argv[3];
    options = require('minimist')(process.argv.slice(3));
    var plugin = router(moduleName);
    if (plugin){ // found plugin
        var func = plugin(commandName);
        if (func){ // found command
          func(options, fnhub);
        }
        else{ // plugin has no such command
          fnhub.logger.warn(moduleName.blue + ' plugin has no '.yellow + commandName.blue + ' command. Run fnhub '.yellow + moduleName.blue + ' help'.yellow);
        }
    } else {
      fnhub.logger.warn("fnhub didn't recognize the ".yellow + command.blue + ' command. Run '.yellow + 'funhub help'.yellow + ' to see all available commands'.yellow)
    }     
  } else { // not enough options for plugin
    fnhub.logger.warn("fnhub didn't recognize the ".yellow + command.blue + ' command. Run '.yellow + 'fnhub help'.yellow + ' to see all available commands'.yellow)
  }
}
