Resources:
  $ModuleName$$FunctionName$Function:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: ''
        S3Key: ''
      Description: ''
      FunctionName: '$ModuleName$-$FunctionName$'
      Handler: index.handler
      Role:
        Fn::GetAtt:
        - $ModuleName$$FunctionName$Role
        - Arn
      Runtime: nodejs4.3
  $ModuleName$$FunctionName$Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  $ModuleName$$FunctionName$RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: $ModuleName$$FunctionName$ RestApi
      Description: API used for $FunctionName$ requests
      FailOnWarnings: true
  $ModuleName$$FunctionName$Permission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        Fn::GetAtt:
        - $ModuleName$$FunctionName$Function
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:aws:execute-api:'
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - Ref: $ModuleName$$FunctionName$RestApi
          - "/*"
  $ModuleName$$FunctionName$Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - $ModuleName$$FunctionName$Method
    Properties:
      RestApiId:
        Ref: $ModuleName$$FunctionName$RestApi
      StageName: $StageName$
  $ModuleName$$FunctionName$Resource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: $ModuleName$$FunctionName$RestApi
      ParentId:
        Fn::GetAtt:
        - $ModuleName$$FunctionName$RestApi
        - RootResourceId
      PathPart: $PathPart$
  $ModuleName$$FunctionName$Method:
    DependsOn: $ModuleName$$FunctionName$Permission
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: $HttpMethod$
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - ":lambda:path/2015-03-31/functions/"
            - Fn::GetAtt:
              - $ModuleName$$FunctionName$Function
              - Arn
            - "/invocations"
        IntegrationResponses:
        - StatusCode: 200
        RequestTemplates:
          application/json:
            Fn::Join:
            - ''
            - - "{"
              - '  "param00": "$input.params(''param00'')"'
              - "}"
      RequestParameters:
        method.request.querystring.param00: false
      ResourceId:
        Ref: $ModuleName$$FunctionName$Resource
      RestApiId:
        Ref: $ModuleName$$FunctionName$RestApi
      MethodResponses:
      - StatusCode: 200
Outputs:
  $ModuleName$$FunctionName$EndPoint:
    Description: Root URL of the API gateway
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: $ModuleName$$FunctionName$RestApi
        - ".execute-api."
        - Ref: AWS::Region
        - ".amazonaws.com"
        - "/$StageName$"
        - "/$PathPart$"
